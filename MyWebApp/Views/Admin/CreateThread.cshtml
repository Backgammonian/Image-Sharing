@*
    Thread creating page for admin
*@

@inject LanguageService LanguageService

@{
    ViewData["Title"] = LanguageService.GetKey("CreateThread_Title");
}

@model CreateThreadViewModel

@if (Model != null &&
    User.IsAdmin())
{
    if (Model.ExistingThreadNames.Any())
    {
        <h3>@LanguageService.GetKey("CreateThread_ExistingThreadNames"):</h3>
        var i = 0;
        foreach (var existingThreadName in Model.ExistingThreadNames)
        {
            i += 1;
            <div>
                <p>@i) @existingThreadName</p>
            </div>
        }
    }

    @if (TempData["Error"] != null)
{
    <div class="col-md-12 alert alert-danger">
        <span>
            <b>@LanguageService.GetKey("SorryErrorOccured")</b> - @TempData["Error"]
        </span>
    </div>
}

    <h3>@LanguageService.GetKey("CreateThread_EnterNameForThread")</h3>

    <form method="post" asp-action="CreateThread" enctype="multipart/form-data">
        <div class="form-group">
            <label asp-for="NewThreadName">@LanguageService.GetKey("CreateThread_NewThreadName")</label>
            <input asp-for="NewThreadName" class="form-control" placeholder="@LanguageService.GetKey("CreateThread_NewThreadNamePlaceholder")" />
            <span asp-validation-for="NewThreadName" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">@LanguageService.GetKey("CreateThread_Submit")</button>
    </form>
}
else
{
    <h3>@LanguageService.GetKey("CreateThread_NoPermission")</h3>
}